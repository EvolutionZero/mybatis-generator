<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geeku.dao.innovative.RecruitMapper" >
    <resultMap id="BaseResultMap" type="com.geeku.model.innovative.Recruit" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="project_id" property="projectId" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="other_demand" property="otherDemand" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, project_id, title, other_demand, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from recruit
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from recruit
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.geeku.model.innovative.Recruit" >
        insert into recruit (id, project_id, title, 
            other_demand, create_time, update_time
            )
        values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
            #{otherDemand,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.geeku.model.innovative.Recruit" >
        insert into recruit
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="projectId != null" >
                project_id,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="otherDemand != null" >
                other_demand,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectId != null" >
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="otherDemand != null" >
                #{otherDemand,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geeku.model.innovative.Recruit" >
        update recruit
        <set >
            <if test="projectId != null" >
                project_id = #{projectId,jdbcType=INTEGER},
            </if>
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="otherDemand != null" >
                other_demand = #{otherDemand,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geeku.model.innovative.Recruit" >
        update recruit
        set project_id = #{projectId,jdbcType=INTEGER},
            title = #{title,jdbcType=VARCHAR},
            other_demand = #{otherDemand,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>