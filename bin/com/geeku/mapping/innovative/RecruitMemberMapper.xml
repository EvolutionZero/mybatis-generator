<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geeku.dao.innovative.RecruitMemberMapper" >
    <resultMap id="BaseResultMap" type="com.geeku.model.innovative.RecruitMember" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="member_type" property="memberType" jdbcType="INTEGER" />
        <result column="recruit_id" property="recruitId" jdbcType="INTEGER" />
        <result column="member_count" property="memberCount" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, member_type, recruit_id, member_count, remark
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from recruit_member
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from recruit_member
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.geeku.model.innovative.RecruitMember" >
        insert into recruit_member (id, member_type, recruit_id, 
            member_count, remark)
        values (#{id,jdbcType=INTEGER}, #{memberType,jdbcType=INTEGER}, #{recruitId,jdbcType=INTEGER}, 
            #{memberCount,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.geeku.model.innovative.RecruitMember" >
        insert into recruit_member
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="memberType != null" >
                member_type,
            </if>
            <if test="recruitId != null" >
                recruit_id,
            </if>
            <if test="memberCount != null" >
                member_count,
            </if>
            <if test="remark != null" >
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="memberType != null" >
                #{memberType,jdbcType=INTEGER},
            </if>
            <if test="recruitId != null" >
                #{recruitId,jdbcType=INTEGER},
            </if>
            <if test="memberCount != null" >
                #{memberCount,jdbcType=INTEGER},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geeku.model.innovative.RecruitMember" >
        update recruit_member
        <set >
            <if test="memberType != null" >
                member_type = #{memberType,jdbcType=INTEGER},
            </if>
            <if test="recruitId != null" >
                recruit_id = #{recruitId,jdbcType=INTEGER},
            </if>
            <if test="memberCount != null" >
                member_count = #{memberCount,jdbcType=INTEGER},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geeku.model.innovative.RecruitMember" >
        update recruit_member
        set member_type = #{memberType,jdbcType=INTEGER},
            recruit_id = #{recruitId,jdbcType=INTEGER},
            member_count = #{memberCount,jdbcType=INTEGER},
            remark = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>