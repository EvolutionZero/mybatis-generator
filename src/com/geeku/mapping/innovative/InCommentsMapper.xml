<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geeku.dao.innovative.InCommentsMapper" >
    <resultMap id="BaseResultMap" type="com.geeku.model.innovative.InComments" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="project_id" property="projectId" jdbcType="INTEGER" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, project_id, content, user_id, create_time, parent_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from in_comments
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from in_comments
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.geeku.model.innovative.InComments" >
        insert into in_comments (id, project_id, content, 
            user_id, create_time, parent_id
            )
        values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
            #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{parentId,jdbcType=INTEGER}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.geeku.model.innovative.InComments" >
        insert into in_comments
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="projectId != null" >
                project_id,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="parentId != null" >
                parent_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectId != null" >
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="parentId != null" >
                #{parentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.geeku.model.innovative.InComments" >
        update in_comments
        <set >
            <if test="projectId != null" >
                project_id = #{projectId,jdbcType=INTEGER},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="parentId != null" >
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.geeku.model.innovative.InComments" >
        update in_comments
        set project_id = #{projectId,jdbcType=INTEGER},
            content = #{content,jdbcType=VARCHAR},
            user_id = #{userId,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            parent_id = #{parentId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>